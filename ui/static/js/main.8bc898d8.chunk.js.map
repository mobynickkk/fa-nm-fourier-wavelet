{"version":3,"sources":["components/common/TransitionAlert.js","components/common/FileUpload/FileUpload.js","components/FourierWavelet/ToggleTransformType.js","components/FourierWavelet/FourierWaveletForm.js","components/FourierWavelet/FourierWaveletGraph.js","components/FourierWavelet/FourierWaveletGraphs.js","components/FourierWavelet/utils.js","components/FourierWavelet/FourierWavelet.js","backend/utils.js","components/Root.js","App.js","reportWebVitals.js","index.js"],"names":["TransitionAlerts","severity","children","isOpen","useState","open","setOpen","Collapse","in","Alert","action","IconButton","aria-label","color","size","onClick","fontSize","sx","mb","FileUpload","title","setFile","format","correctExtension","setCorrectExtension","inputRef","useRef","ref","className","type","name","id","onChange","event","target","files","split","pop","htmlFor","Box","current","length","AlertTitle","ToggleTransformType","transformType","setTransformType","ToggleButtonGroup","value","exclusive","ToggleButton","disabled","FourierWaveletForm","calculateTransform","file","Grid","container","spacing","direction","item","xs","FormGroup","Button","preventDefault","variant","Typography","marginTop","border","borderRadius","padding","style","borderBottom","textAlign","FourierWaveletGraph","main","src","width","height","alt","Skeleton","Slider","defaultValue","maxFreq","getAriaValueText","valueLabelDisplay","step","stepFreq","marks","min","minFreq","max","onChangeCommitted","FourierWaveletGraphs","graphs","setGraphs","getGraphs","url","headers","checkDataCallback","onSuccessCallback","prevGraphs","source","marginBottom","md","values","maxFrequency","changeable","dispersion","EMPTY_GRAPHS","validateInput","data","includes","parseData","formData","FormData","append","FourierWavelet","activeStep","setActiveStep","steps","useMemo","parseDataCallback","Stepper","marginLeft","marginRight","map","label","index","Step","StepLabel","Paper","position","bottom","left","right","elevation","BottomNavigation","showLabels","newValue","BottomNavigationAction","icon","getSpectrogram","showLoading","showError","params","a","fetch","method","body","JSON","stringify","response","ok","text","json","Root","showLoadingFunc","bdOpen","setBdOpen","errorOpen","setErrorOpen","errorText","setErrorText","showBackdrop","mode","onClose","reason","Backdrop","zIndex","theme","drawer","CircularProgress","Snackbar","autoHideDuration","App","createTheme","palette","primary","contrastText","secondary","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8bc898d8.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nexport default function TransitionAlerts({severity, children, isOpen = true}) {\r\n    const [open, setOpen] = useState(isOpen);\r\n\r\n    return (\r\n            <Collapse in={open}>\r\n                <Alert\r\n                    severity={severity}\r\n                    action={\r\n                        <IconButton\r\n                            aria-label=\"close\"\r\n                            color=\"inherit\"\r\n                            size=\"small\"\r\n                            onClick={() => {\r\n                                setOpen(false);\r\n                            }}\r\n                        >\r\n                            <CloseIcon fontSize=\"inherit\" />\r\n                        </IconButton>\r\n                    }\r\n                    sx={{ mb: 2 }}\r\n                >\r\n                    { children }\r\n                </Alert>\r\n            </Collapse>\r\n    );\r\n}\r\n","import React, {useRef, useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./fileUpload.css\";\r\nimport AlertTitle from \"@mui/material/AlertTitle\";\r\nimport TransitionAlert from \"../TransitionAlert\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst FileUpload = ({ title, setFile, format = 'csv' }) => {\r\n    const [correctExtension, setCorrectExtension] = useState(true);\r\n    const inputRef = useRef(null);\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <input ref={inputRef} className=\"file-upload\" type=\"file\" name=\"file\" id={title} onChange={event => {\r\n                    if (event.target.files && event.target.files[0].name.split('.').pop() !== format) {\r\n                        setCorrectExtension(false);\r\n                        return;\r\n                    }\r\n                    setCorrectExtension(true);\r\n                    setFile(event.target.files[0]);\r\n                }}/>\r\n                <label htmlFor={title} >\r\n                    <span className=\"btn-3\">{title}</span>\r\n                </label>\r\n            </div>\r\n            <Box>\r\n                {inputRef.current && inputRef.current.files.length > 0 && correctExtension &&\r\n                    <TransitionAlert severity=\"success\">\r\n                        <AlertTitle>Успех</AlertTitle>\r\n                        Файл {inputRef.current.files[0].name} <strong>успешно загружен!</strong>\r\n                    </TransitionAlert>\r\n                }\r\n                {!correctExtension &&\r\n                    <TransitionAlert severity=\"error\">Загружать можно только файлы формата {format}!</TransitionAlert>\r\n                }\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nFileUpload.propTypes = {\r\n    title: PropTypes.string,\r\n    setFile: PropTypes.func,\r\n}\r\n\r\nexport default FileUpload;\r\n","import React from \"react\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport \"./fourierWavelet.css\";\r\n\r\nconst ToggleTransformType = ({ transformType, setTransformType }) => {\r\n\r\n    return (\r\n        <ToggleButtonGroup\r\n            className=\"toggle-group\"\r\n            color=\"primary\"\r\n            value={transformType}\r\n            exclusive\r\n            onChange={(event, value) => setTransformType(value)}\r\n        >\r\n            <ToggleButton value=\"fourier\">Фурье</ToggleButton>\r\n            <ToggleButton value=\"wavelet\" disabled>Вейвлет</ToggleButton>\r\n        </ToggleButtonGroup>\r\n    );\r\n}\r\n\r\nexport default ToggleTransformType;\r\n","import FormGroup from \"@mui/material/FormGroup\";\r\nimport FileUpload from \"../common/FileUpload/FileUpload\";\r\nimport ToggleTransformType from \"./ToggleTransformType\";\r\nimport Button from \"@mui/material/Button\";\r\nimport React, {useState} from \"react\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nconst FourierWaveletForm = ({calculateTransform}) => {\r\n    const [file, setFile] = useState(null);\r\n    const [transformType, setTransformType] = useState(\"fourier\");\r\n\r\n    return (\r\n        <Grid container spacing={2} direction=\"row\" className=\"form__container\">\r\n            <Grid item xs={6}>\r\n                <FormGroup className=\"form\">\r\n                    <FileUpload title={'Загрузите csv файл'} setFile={setFile} />\r\n                    <div>\r\n                        <ToggleTransformType transformType={transformType} setTransformType={setTransformType} />\r\n                        <Button onClick={event => {\r\n                            event.preventDefault();\r\n                            calculateTransform({file, transformType});\r\n                        }} variant=\"outlined\">\r\n                            Вычислить\r\n                        </Button>\r\n                    </div>\r\n                </FormGroup>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <Typography className=\"form\">\r\n                    {transformType === 'fourier' ? (\r\n                        <p><strong>Анализ Фурье</strong> — направление в анализе, изучающее каким образом общие математические функции могут быть представлены\r\n                            либо приближены через сумму более простых тригонометрических функций.</p>\r\n                        ) : (\r\n                        <p><strong>Вейвлет</strong> — математическая функция, позволяющая анализировать различные частотные компоненты данных.\r\n                            График функции выглядит как волнообразные колебания с амплитудой, уменьшающейся до нуля вдали от начала координат.</p>\r\n                        )}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Box sx={{ marginTop: '10vh', border: '1px solid #00BCD4', borderRadius: '5px', padding: '4rem' }}>\r\n                    <h3 style={{ borderBottom: '1px solid #00BCD4' }} >Подсказка</h3>\r\n                    <Typography sx={{ textAlign: 'center'}}>\r\n                        Для получения информации о фурье или вейвлет разложении функции, загрузите csv файл, выберите\r\n                        необходимый способ разложения. Затем на странице с графиками вы можете посмотреть всю информацию по\r\n                        полученному разложению и посмотреть, как оно меняется при обрезании частот\r\n                    </Typography>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default FourierWaveletForm;\r\n","import React from \"react\";\r\nimport Skeleton from \"@mui/material/Skeleton\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst FourierWaveletGraph = ({ item, main, onChange }) => {\r\n    return (\r\n        <>\r\n            <h3>{item.title}</h3>\r\n            {item.src ? (\r\n                    <img\r\n                        style={{\r\n                            width: 400,\r\n                            height: 350,\r\n                            border: '1px solid white',\r\n                            padding: 3,\r\n                            borderRadius: 3\r\n                        }}\r\n                        alt={item.title}\r\n                        src={item.src}\r\n                    />\r\n                ) : (\r\n                    <Skeleton variant=\"rectangular\" width={400} height={350} />\r\n                )\r\n            }\r\n            {main && (\r\n                <Box sx={{ marginTop: '2vh' }}>\r\n                    <Typography>Срезать верхние частоты до:</Typography>\r\n                    <Slider\r\n                        className=\"freq-regulation\"\r\n                        aria-label=\"Включенные частоты\"\r\n                        sx={{ width: 400 }}\r\n                        defaultValue={item.maxFreq}\r\n                        getAriaValueText={value => `${value} Hz`}\r\n                        valueLabelDisplay=\"auto\"\r\n                        step={item.stepFreq}\r\n                        marks\r\n                        min={item.minFreq}\r\n                        max={item.maxFreq}\r\n                        onChangeCommitted={(event, value) => {\r\n                            onChange(value);\r\n                        }}\r\n                    />\r\n                </Box>\r\n                )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FourierWaveletGraph;\r\n","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport FourierWaveletGraph from \"./FourierWaveletGraph\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst FourierWaveletGraphs = ({ graphs, setGraphs, calculateTransform }) => {\r\n    const handleFreqResponse = graphs => {\r\n        setGraphs(prevGraphs => ({ ...graphs, main: prevGraphs.main, source: prevGraphs.source }));\r\n    }\r\n\r\n    const getGraphs = calculateTransform({\r\n        url: 'https://fa-back.herokuapp.com/freq/',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        checkDataCallback: () => true,\r\n        onSuccessCallback: handleFreqResponse\r\n    })\r\n\r\n    const handleFreqChange = value => {\r\n        getGraphs({ values: graphs.values, maxFrequency: value })\r\n    }\r\n\r\n    return (\r\n        <Grid container sx={{ marginBottom: '15vh' }} spacing={{ xs: 2, md: 5 }} className=\"graphs\" >\r\n            <Grid item xs={6}>\r\n                <FourierWaveletGraph item={graphs.main} main onChange={handleFreqChange} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <FourierWaveletGraph item={graphs.changeable} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <FourierWaveletGraph item={graphs.source} />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <FourierWaveletGraph item={graphs.target} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography>\r\n                    <strong>Значение дисперсии</strong> для данного разложения составляет {graphs.dispersion}\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default FourierWaveletGraphs;\r\n","export const EMPTY_GRAPHS = {\r\n    main: {\r\n        title: 'Спектрограмма разложения',\r\n        src: null,\r\n        minFreq: 10,\r\n        maxFreq: 100,\r\n        stepFreq: 10\r\n    },\r\n    changeable: {\r\n        title: 'Результат обрезания частот (спектрограмма)',\r\n        src: null\r\n    },\r\n    source: {\r\n        title: 'Изначальный сигнал',\r\n        src: null\r\n    },\r\n    target: {\r\n        title: 'Восстановленный сигнал',\r\n        src: null\r\n    },\r\n    values: [],\r\n    dispersion: 0.5\r\n}\r\n\r\nexport const validateInput = data => {\r\n    return data.file\r\n        && ['waves', 'csv'].includes(data.file.name.split('.').pop())\r\n        && data.transformType\r\n        && ['fourier', 'wavelet'].includes(data.transformType);\r\n}\r\n\r\nexport const parseData = data => {\r\n    const formData = new FormData();\r\n    formData.append('file', data.file);\r\n    formData.append('transformType', data.transformType);\r\n    return formData;\r\n}\r\n","import React, {useMemo, useState} from \"react\";\r\nimport \"./fourierWavelet.css\";\r\nimport Stepper from \"@mui/material/Stepper\";\r\nimport Step from \"@mui/material/Step\";\r\nimport StepLabel from \"@mui/material/StepLabel\";\r\nimport FourierWaveletForm from \"./FourierWaveletForm\";\r\nimport FourierWaveletGraphs from \"./FourierWaveletGraphs\";\r\nimport {EMPTY_GRAPHS, parseData, validateInput} from \"./utils\";\r\nimport InputIcon from '@mui/icons-material/Input';\r\nimport TimelineIcon from '@mui/icons-material/Timeline';\r\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\r\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nconst FourierWavelet = ({ calculateTransform }) => {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [graphs, setGraphs] = useState(EMPTY_GRAPHS);\r\n\r\n    const steps = useMemo(() => [\"Введите данные для анализа\", \"Результаты\"], []);\r\n\r\n    const getGraphs = calculateTransform({\r\n        url: 'https://fa-back.herokuapp.com/graphs/',\r\n        parseDataCallback: parseData,\r\n        checkDataCallback: validateInput,\r\n        onSuccessCallback: setGraphs\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Stepper sx={{ marginLeft: '20vh', marginRight: '20vh' }} activeStep={activeStep}>\r\n                {steps.map((label, index) => {\r\n                    return (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    );\r\n                })}\r\n            </Stepper>\r\n            {activeStep === 0 ? (\r\n                <FourierWaveletForm calculateTransform={getGraphs}/>\r\n            ) : (\r\n                <FourierWaveletGraphs graphs={graphs} setGraphs={setGraphs} calculateTransform={calculateTransform} />\r\n            )}\r\n            <Paper sx={{ position: 'fixed', width: '100%', bottom: 0, left: 0, right: 0 }} elevation={3}>\r\n                <BottomNavigation\r\n                    showLabels\r\n                    value={activeStep}\r\n                    onChange={(event, newValue) => {\r\n                        setActiveStep(newValue);\r\n                    }}\r\n                >\r\n                    <BottomNavigationAction label=\"Ввод данных\" icon={<InputIcon />} />\r\n                    <BottomNavigationAction label=\"Графики\" icon={<TimelineIcon />} />\r\n                </BottomNavigation>\r\n            </Paper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FourierWavelet;\r\n","export const showLoading = showLoadingFunc => mode => showLoadingFunc(mode);\r\n\r\nexport const getSpectrogram = (showLoading, showError) => params => async data => {\r\n    if (!params.checkDataCallback(data)) {\r\n        showError('Неправильно заполнены данные');\r\n        return;\r\n    }\r\n    showLoading(true);\r\n    try {\r\n        const response = await fetch(params.url, {\r\n            method: 'POST',\r\n            headers: params.headers,\r\n            body: params.parseDataCallback ? params.parseDataCallback(data) : JSON.stringify(data),\r\n        });\r\n        showLoading(false);\r\n        if (!response.ok) {\r\n            showError(await response.text());\r\n        } else {\r\n            params.onSuccessCallback(await response.json());\r\n        }\r\n    } catch (e) {\r\n        showLoading(false);\r\n        showError(e);\r\n    }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport FourierWavelet from \"./FourierWavelet/FourierWavelet\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport { getSpectrogram, showLoading } from \"../backend/utils\";\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\n\r\nconst Root = () => {\r\n    const [bdOpen, setBdOpen] = useState(false);\r\n    const [errorOpen, setErrorOpen] = useState(false);\r\n    const [errorText, setErrorText] = useState('');\r\n    const showBackdrop = showLoading(setBdOpen);\r\n    const showError = text => {\r\n        setErrorOpen(true);\r\n        setErrorText(text);\r\n    }\r\n\r\n    const onClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setErrorOpen(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <main>\r\n                <h1 style={{textAlign: 'center'}}>Фурье- и Вейвлет-Анализ</h1>\r\n\r\n                <FourierWavelet calculateTransform={getSpectrogram(showBackdrop, showError)} />\r\n\r\n            </main>\r\n            <Backdrop\r\n                sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                open={bdOpen}\r\n            >\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n            <Snackbar open={errorOpen} autoHideDuration={6000}\r\n                      onClose={onClose}>\r\n                <Alert onClose={onClose} severity=\"error\" sx={{ width: '100%' }}>\r\n                    {errorText}\r\n                </Alert>\r\n            </Snackbar>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Root;\r\n","import React from \"react\";\nimport createTheme from \"@mui/material/styles/createTheme\";\nimport ThemeProvider from \"@mui/material/styles/ThemeProvider\";\nimport Root from \"./components/Root\";\n\nconst App = () => {\n  const theme = createTheme({\n    palette: {\n      mode: 'dark',\n      primary: {\n        main: '#00BCD4',\n        contrastText: '#121212'\n      },\n      secondary: {\n        main: '#CDDC39',\n        contrastText: '#121212'\n      },\n    }\n  });\n\n  return (\n      <ThemeProvider theme={theme}>\n        <Root />\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}